// Generated by Haxe 4.1.5
(function ($hx_exports, $global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var djWeb_MainFrame = function(p_) {
	this.callback_modalOnClose = null;
	this.modals = null;
	this.currentPage = new djWeb_Page("default");
	this.header = null;
	this.params = djWeb_tools_Helper.defParams(p_,djWeb_MainFrame.defaultParams);
	djWeb_W.init();
	djWeb_W.main = this;
	window.document.title = this.params.pageTitle;
	this.createContainer();
	if(djWeb_W.browser.IS_MOBILE) {
		djWeb_W.dom.ADD_META("viewport","width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no");
		window.addEventListener("orientationchange",$bind(this,this.onOrientationChange));
		this.onOrientationChange();
	}
	this.pages = new haxe_ds_StringMap();
	this.addPage(this.currentPage);
	this.el.appendChild(this.currentPage.el);
	window.onresize = $bind(this,this.onResize);
	this.onResize();
	this.scroll_top = 0;
	if(this.params.scrollEvents && this.params.scrollable) {
		haxe_Log.trace("+ Adding Event Listener, onScroll()",{ fileName : "djWeb/MainFrame.hx", lineNumber : 148, className : "djWeb.MainFrame", methodName : "new"});
		window.onscroll = $bind(this,this.__onScroll);
		this._scrollCheckLock = false;
		this.onScroll();
	}
	window.onfocus = $bind(this,this.onFocus);
	window.onblur = $bind(this,this.onBlur);
	this.isFocused = window.document.hasFocus();
	if(typeof document.hidden !== "undefined") {
		this._v_hidden = "hidden";
		this._v_change = "visibilitychange";
	} else if(typeof document.msHidden !== "undefined") {
		this._v_hidden = "msHidden";
		this._v_change = "msvisibilitychange";
	} else if(typeof document.webkitHidden !== "undefined") {
		this._v_hidden = "webkitHidden";
		this._v_change = "webkitvisibilitychange";
	} else {
		this._v_hidden = "";
	}
	window.document.addEventListener(this._v_change,$bind(this,this.onVisibilityChange),true);
	this.onVisibilityChange();
};
djWeb_MainFrame.__name__ = true;
djWeb_MainFrame.prototype = {
	onFocus: function() {
		this.isFocused = true;
	}
	,onBlur: function() {
		this.isFocused = false;
	}
	,onResize: function() {
		this.width = window.innerWidth;
		this.height = window.innerHeight;
		this.currentPage.onResize();
		this.onScroll();
	}
	,__onScroll: function() {
		var _gthis = this;
		if(this._scrollCheckLock == false) {
			this._scrollCheckLock = true;
			haxe_Timer.delay(function() {
				_gthis._scrollCheckLock = false;
				_gthis.onScroll();
			},this.params.scrollCheckFreq);
		}
	}
	,onScroll: function() {
		this.scroll_prev = this.scroll_top;
		this.scroll_top = window.scrollY;
		this.scroll_bottom = this.scroll_top + window.innerHeight;
		if(this.header != null) {
			this.header.update();
		}
		this.currentPage.onScroll();
	}
	,onOrientationChange: function() {
		this.isPortrait = Math.abs(window.screen.orientation.angle) != 90;
		haxe_Log.trace("+ Orientation Change, Portrait = ",{ fileName : "djWeb/MainFrame.hx", lineNumber : 271, className : "djWeb.MainFrame", methodName : "onOrientationChange", customParams : [this.isPortrait]});
		this.currentPage.onOrientationChange();
	}
	,onVisibilityChange: function() {
		this.isVisible = !Reflect.getProperty(window.document,this._v_hidden);
		this.currentPage.onVisibilityChange();
	}
	,createContainer: function() {
		var _this = djWeb_W.dom;
		this.el = window.document.createElement("div");
		this.bg = this.el;
		if(this.params.scrollable) {
			if(this.params.staticBG) {
				this.el.style.position = "absolute";
				var _this = djWeb_W.dom;
				this.bg = window.document.createElement("div");
				this.bg.style.width = "100%";
				this.bg.style.height = "100%";
				this.bg.style.display = "block";
				this.bg.style.position = "fixed";
				this.bg.style.zIndex = "0";
				window.document.body.appendChild(this.bg);
			} else {
				this.el.style.minHeight = "100vh";
			}
		} else {
			window.document.body.style.overflow = "hidden";
			this.el.style.height = "100vh";
			this.el.style.overflow = "hidden";
		}
		djWeb_W.dom.qStyle(this.el,{ width : "100%", display : "block", margin : "0", padding : "0", zIndex : "1", overflowX : "hidden"});
		window.document.body.appendChild(this.el);
	}
	,addHeader: function(h_) {
		this.header = h_;
		if(h_.ghostEl != null) {
			this.el.insertBefore(h_.ghostEl,this.currentPage.el);
		}
		this.el.insertBefore(h_.el,this.currentPage.el);
	}
	,addPage: function(p_,setNow) {
		this.pages.h[p_.sid] = p_;
		if(setNow == true) {
			this.setPage(p_.sid);
		}
	}
	,setPage: function(sid,data) {
		this.el.removeChild(this.currentPage.el);
		this.currentPage.isOn = false;
		this.currentPage = this.pages.h[sid];
		this.el.appendChild(this.currentPage.el);
		this.currentPage.isOn = true;
		this.currentPage.init(data);
		this.currentPage.onResize();
		this.currentPage.onScroll();
	}
	,createModal: function(callback) {
		var _gthis = this;
		this.closeModal();
		var _this = djWeb_W.dom;
		var n = window.document.createElement("div");
		djWeb_W.dom.qStyle(n,{ position : "fixed", width : "100%", height : "100%", left : "0", top : "0", overflow : "none", display : "block", background : "#020202", opacity : "0.95"});
		var _this = djWeb_W.dom;
		var m = window.document.createElement("div");
		djWeb_W.dom.qStyle(m,{ position : "fixed", width : "100%", height : "100%", left : "0", top : "0", overflow : "none", display : "block"});
		djWeb_W.dom.toFlex(m,"column","start");
		this.modals = [n,m];
		this.callback_modalOnClose = callback;
		window.onkeydown = function(e) {
			if(e.keyCode == 27) {
				_gthis.closeModal();
			}
		};
		m.onmouseup = function(e) {
			if(e.button == 0) {
				_gthis.closeModal();
			}
		};
		var topStrip = djWeb_W.text.fText("Click anywhere or press [ESC] to close.",{ size : 8, color : "#BBB", padding : "6px", display : "inline", bgColor : "black"});
		topStrip.style.cursor = "pointer";
		topStrip.style.alignSelf = "center";
		var _this = djWeb_W.dom;
		var container = window.document.createElement("div");
		container.style.flex = "1";
		m.appendChild(container);
		m.appendChild(topStrip);
		this.el.appendChild(n);
		this.el.appendChild(m);
		return container;
	}
	,closeModal: function() {
		if(this.modals == null) {
			return;
		}
		window.onkeydown = null;
		this.el.removeChild(this.modals[0]);
		this.el.removeChild(this.modals[1]);
		if(this.callback_modalOnClose != null) {
			this.callback_modalOnClose();
		}
		this.callback_modalOnClose = null;
		this.modals = null;
	}
};
var Main = function() {
	djWeb_MainFrame.call(this,{ scrollable : true, scrollEvents : true, pageTitle : REG.SITE_TITLE});
	this.createStyles();
	djWeb_media_BoxWebm.DEFAULTS.spinner = REG.PATH_MEDIA + "loading2.gif";
	djWeb_W.browser.videoCheck();
	djWeb_W.loader.addJSON("bin/entries.json","entries");
	var _g = 0;
	var _g1 = REG.TILED_BACKGROUNDS;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		djWeb_W.loader.addImage(REG.PATH_MEDIA + i);
	}
	djWeb_W.loader.start($bind(this,this.ready));
};
Main.__name__ = true;
Main.main = function() {
	window.document.body.onload = function() {
		new Main();
	};
};
Main.__super__ = djWeb_MainFrame;
Main.prototype = $extend(djWeb_MainFrame.prototype,{
	ready: function() {
		this.bg.style.background = "linear-gradient(to bottom, #000 0%, #333 100%)";
		var h = new djWeb_other_FixedHeader({ autoHide : true, height : 18, scrollTrigger : 100});
		h.el.style.background = REG.COLOR_ACCENT;
		h.el.appendChild(djWeb_W.text.fText(this.params.pageTitle,{ size : 12, color : "black"}));
		this.addHeader(h);
		var p = new djWeb_Page("main");
		p.add(new djWeb_Section({ height : "8px", width : "100%", backgroundColor : REG.COLOR_ACCENT}));
		p.add(new sections_Section_$Title());
		if(!djWeb_W.browser.VIDEO_WEBM) {
			p.add(new sections_Section_$Incompatible());
		}
		p.add(new sections_Section_$Header("Projects","Showcase of various works",REG.MAX_WIDTH - 64));
		p.add(new sections_Section_$Projects());
		p.add(new sections_Section_$Header("More","Links and Contact Info",REG.DEF_WIDTH + 64));
		p.add(new sections_Section_$Other());
		p.add(new sections_Section_$Footer());
		this.addPage(p,true);
	}
	,createStyles: function() {
		if(djWeb_W.browser.IS_MOBILE) {
			REG.MIN_WIDTH = this.width;
			REG.DEF_WIDTH = this.width;
			REG.MAX_WIDTH = this.width;
			djWeb_W.dom.ADD_META("theme-color",REG.COLOR_MOB_THEME);
		}
		var css = "";
		css += "a { text-decoration:none; color:" + REG.COLOR_LINK + "; } a:hover {color:" + REG.COLOR_LINK_HOVER + ";}";
		css += "h1,h2,h3,h4 { font-weight:bold; }";
		css += "h2 { font-size: 22px; }";
		css += "h3 { font-size: 16px; font-weight:100; }";
		css += "h4 { font-size: 8px;  }";
		djWeb_W.dom.CSS_AddStyle("custom",css);
		djWeb_Section.defStyle.width = REG.DEF_WIDTH + "px";
	}
});
Math.__name__ = true;
var REG = function() { };
REG.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.copy = function(o) {
	if(o == null) {
		return null;
	}
	var o2 = { };
	var _g = 0;
	var _g1 = Reflect.fields(o);
	while(_g < _g1.length) {
		var f = _g1[_g];
		++_g;
		o2[f] = Reflect.field(o,f);
	}
	return o2;
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var djWeb_Loader = function() {
	this.itemsLoaded = [];
	this.itemsLoading = [];
	this.itemsWaiting = [];
	this.MAX_CONCURRENT = 3;
	this.reset();
};
djWeb_Loader.__name__ = true;
djWeb_Loader.prototype = {
	reset: function() {
		this.num_totalItems = 0;
		this.callback_onLoad = null;
		this.isLoaded = false;
		while(this.itemsWaiting.length > 0) this.itemsWaiting.pop();
		while(this.itemsLoading.length > 0) {
			var item = this.itemsLoading.pop();
			item.onload = null;
			if(item.type_ == "json") {
				item.abort();
			}
		}
		this.itemsLoaded = [];
		this.bank = new haxe_ds_StringMap();
	}
	,addImage: function(url) {
		var _gthis = this;
		var im = new Image();
		im.type_ = "image";
		im.src_ = url;
		im.onload = function() {
			_gthis.onItemLoaded(im);
		};
		this.itemsWaiting.push(im);
		this.num_totalItems++;
	}
	,addJSON: function(url,key) {
		var _gthis = this;
		var file = new XMLHttpRequest();
		file.type_ = "json";
		file.key_ = key;
		file.responseType = "json";
		file.open("get",url,true);
		file.onload = function() {
			if(file.status == 200) {
				_gthis.onItemLoaded(file);
			} else {
				haxe_Log.trace("Error: Failed to load JSON",{ fileName : "djWeb/Loader.hx", lineNumber : 106, className : "djWeb.Loader", methodName : "addJSON", customParams : [file.responseURL]});
			}
		};
		this.itemsWaiting.push(file);
		this.num_totalItems++;
	}
	,start: function(callback_,callbackError_) {
		this.callback_onError = callbackError_;
		this.callback_onLoad = callback_;
		var nn = this.MAX_CONCURRENT;
		while(nn-- > 0) if(this.itemsWaiting.length >= 0) {
			this.processQueue();
		} else {
			break;
		}
	}
	,onItemLoaded: function(item) {
		item.onload = null;
		this.itemsLoaded.push(item);
		switch(item.type_) {
		case "image":
			break;
		case "json":
			this.bank.h[item.key_] = item.response;
			if(item.response == null) {
				haxe_Log.trace("Error Parsing JSON",{ fileName : "djWeb/Loader.hx", lineNumber : 144, className : "djWeb.Loader", methodName : "onItemLoaded", customParams : [item.responseURL]});
				if(this.callback_onError != null) {
					this.callback_onError();
				}
			}
			break;
		default:
		}
		this.processQueue();
	}
	,processQueue: function() {
		if(this.itemsWaiting.length == 0 && this.num_totalItems == this.itemsLoaded.length) {
			this.isLoaded = true;
			if(this.callback_onLoad != null) {
				this.callback_onLoad();
			}
		} else {
			var item = this.itemsWaiting.pop();
			if(item == null) {
				return;
			}
			if(item.type_ == "image") {
				item.src = item.src_;
			} else if(item.type_ == "json") {
				item.send(null);
			}
		}
	}
};
var djWeb_Page = function(sid_) {
	this.isOn = false;
	this.sections = [];
	this.sid = sid_;
	var _this = djWeb_W.dom;
	this.el = window.document.createElement("div");
	this.scrollTracked = [];
	this._scTrDelList = [];
};
djWeb_Page.__name__ = true;
djWeb_Page.prototype = {
	init: function(data) {
	}
	,add: function(s) {
		this.sections.push(s);
		s.page = this;
		if(s.bg != null) {
			this.el.appendChild(s.bg);
		} else {
			this.el.appendChild(s.el);
		}
		s.onAddedToPage();
		if(this.isOn) {
			s.handleResize();
		}
		if(s.scrollAware != null) {
			this.trackScroll(s.scrollAware);
		}
	}
	,trackScroll: function(obj) {
		if(obj == null) {
			return;
		}
		this.scrollTracked.push(obj);
		if(this.isOn) {
			obj.checkScroll();
		}
	}
	,onResize: function() {
		var _g = 0;
		var _g1 = this.sections;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			s.handleResize();
		}
	}
	,onScroll: function() {
		var _g = 0;
		var _g1 = this.scrollTracked;
		while(_g < _g1.length) {
			var st = _g1[_g];
			++_g;
			st.checkScroll();
		}
		if(this._scTrDelList.length > 0) {
			var _g = 0;
			var _g1 = this._scTrDelList;
			while(_g < _g1.length) {
				var sd = _g1[_g];
				++_g;
				HxOverrides.remove(this.scrollTracked,sd);
			}
			this._scTrDelList = [];
		}
	}
	,onOrientationChange: function() {
	}
	,onVisibilityChange: function() {
	}
	,get_width: function() {
		return this.el.offsetWidth;
	}
	,__properties__: {get_width:"get_width"}
};
var djWeb_ScrollAware = function(_el,_fire_once,_fade) {
	if(_fade == null) {
		_fade = false;
	}
	if(_fire_once == null) {
		_fire_once = false;
	}
	this.trigger_offset = 10;
	this.el = _el;
	this.isVisible = false;
	this.flag_fade = _fade;
	this.flag_fire_once = _fire_once;
	if(this.flag_fade) {
		djWeb_tools_Helper.appendTransition(this.el,"opacity 0.25s ease-out");
		this.el.style.opacity = "0";
	}
};
djWeb_ScrollAware.__name__ = true;
djWeb_ScrollAware.prototype = {
	checkScroll: function() {
		var sc1 = this.el.offsetTop + this.trigger_offset;
		var sc2 = sc1 + this.el.offsetHeight - this.trigger_offset * 2;
		if(sc1 <= djWeb_W.main.scroll_bottom && sc2 >= djWeb_W.main.scroll_top) {
			if(!this.isVisible) {
				this.setON();
			}
		} else if(this.isVisible) {
			this.setOFF();
		}
	}
	,setON: function() {
		this.isVisible = true;
		if(this.flag_fade) {
			this.el.style.opacity = "1";
		}
		if(this.flag_fire_once) {
			djWeb_W.main.currentPage._scTrDelList.push(this);
		}
		if(this.callback_ON != null) {
			this.callback_ON();
		}
	}
	,setOFF: function() {
		this.isVisible = false;
		if(this.flag_fade) {
			this.el.style.opacity = "0";
		}
		if(this.callback_OFF != null) {
			this.callback_OFF();
		}
	}
};
var djWeb_Section = function(style) {
	this.scrollAware = null;
	this._stepsD = null;
	this.resizeType = 3;
	this.bg = null;
	var _this = djWeb_W.dom;
	this.el = window.document.createElement("div");
	this.el.style.marginLeft = "auto";
	this.el.style.marginRight = "auto";
	style = djWeb_tools_Helper.defParams(style,djWeb_Section.defStyle);
	djWeb_W.dom.qStyle(this.el,style);
};
djWeb_Section.__name__ = true;
djWeb_Section.prototype = {
	init: function(data) {
	}
	,onAddedToPage: function() {
	}
	,createBGStrip: function(bgCSS) {
		var _this = djWeb_W.dom;
		this.bg = window.document.createElement("div");
		this.bg.style.width = "100%";
		this.bg.style.height = this.el.style.height;
		this.bg.style.background = bgCSS;
		this.bg.appendChild(this.el);
	}
	,add: function(obj) {
		if(((obj) instanceof HTMLElement)) {
			this.el.appendChild(obj);
		} else if(typeof(obj) == "string") {
			this.el.innerHTML += Std.string(obj);
		} else if(obj.el != null) {
			this.el.appendChild(obj.el);
		}
	}
	,setResizeBehavior: function(type,steps) {
		if(type == "rubber") {
			this.el.style.width = "";
			this.el.style.minWidth = steps[0] + "px";
			this.el.style.maxWidth = steps[1] + "px";
			this.resizeType = 1;
		} else if(type == "steps") {
			this._stepsD = { min : steps[0], max : steps[1], current : -1};
			this.resizeType = 2;
			this.el.style.width = steps[0] + "px";
		} else {
			this.resizeType = 3;
		}
	}
	,handleResize: function() {
		if(this.resizeType != 2) {
			return;
		}
		if(this._stepsD.current != 0 && this.page.get_width() < this._stepsD.max) {
			this.el.style.width = "" + Std.string(this._stepsD.min) + "px";
			this._stepsD.current = 0;
			this.onStepResize(0);
		} else if(this._stepsD.current != 1 && this.page.get_width() >= this._stepsD.max) {
			this.el.style.width = "" + Std.string(this._stepsD.max) + "px";
			this._stepsD.current = 1;
			this.onStepResize(1);
		}
	}
	,onStepResize: function(step) {
	}
};
var djWeb_W = $hx_exports["W"] = function() { };
djWeb_W.__name__ = true;
djWeb_W.init = function() {
	if(djWeb_W.dom != null) {
		return;
	}
	djWeb_W.dom = new djWeb_tools_DomTools();
	djWeb_W.loader = new djWeb_Loader();
	djWeb_W.browser = new djWeb_tools_BrowserInfos();
	djWeb_W.text = new djWeb_tools_TextTools();
	djWeb_W.math = new djWeb_tools_MathTools();
};
var djWeb_media_BoxWebm = function(vidSource,width,height,_params) {
	this.params = djWeb_tools_Helper.defParams(_params,djWeb_media_BoxWebm.DEFAULTS);
	this.isLoaded = false;
	this.isLoading = false;
	this.flag_delayPlay = false;
	this.videoToLoad = vidSource;
	var _this = djWeb_W.dom;
	this.el = window.document.createElement("div");
	this.el.style.display = "flex";
	this.el.style.alignItems = "center";
	this.el.style.position = "relative";
	if(this.params.use_placeholder) {
		this.thumbEl = new Image(width,height);
		this.thumbEl.src = this.videoToLoad + ".jpg";
		this.thumbEl.style.objectFit = "cover";
		this.thumbEl.style.zIndex = "10";
		this.thumbEl.style.left = "0px";
		this.el.appendChild(this.thumbEl);
	}
	if(this.params.use_spinner && djWeb_W.browser.VIDEO_WEBM) {
		this.spinEl = new Image(width,height);
		this.spinEl.src = this.params.spinner;
		this.spinEl.style.objectFit = "cover";
		this.spinEl.style.zIndex = "11";
		if(this.params.use_placeholder) {
			djWeb_tools_Helper.setOverlapping(this.thumbEl,false);
			djWeb_tools_Helper.setOverlapping(this.spinEl);
			this.spinEl.style.opacity = "0.6";
		}
		this.el.appendChild(this.spinEl);
	}
	if(djWeb_W.browser.VIDEO_WEBM) {
		var _this = djWeb_W.dom;
		this.vidEl = window.document.createElement("video");
		this.vidEl.loop = true;
		this.vidEl.controls = false;
		this.vidEl.muted = true;
		this.vidEl.autoplay = false;
		this.vidEl.style.width = width + "px";
		this.vidEl.style.height = "auto";
	}
	if(!this.params.jit) {
		this.loadVideo();
	}
};
djWeb_media_BoxWebm.__name__ = true;
djWeb_media_BoxWebm.prototype = {
	loadVideo: function() {
		var _gthis = this;
		if(!djWeb_W.browser.VIDEO_WEBM) {
			return;
		}
		if(this.isLoading) {
			return;
		}
		this.isLoading = true;
		haxe_Log.trace("+ Requesting to load video ",{ fileName : "djWeb/media/BoxWebm.hx", lineNumber : 161, className : "djWeb.media.BoxWebm", methodName : "loadVideo", customParams : [this.videoToLoad]});
		this.vidEl.onloadeddata = function(e) {
			_gthis._videoLoaded();
		};
		this.vidEl.src = this.videoToLoad;
	}
	,_videoLoaded: function() {
		haxe_Log.trace("Video " + this.vidEl.src + " Loaded",{ fileName : "djWeb/media/BoxWebm.hx", lineNumber : 177, className : "djWeb.media.BoxWebm", methodName : "_videoLoaded"});
		this.isLoaded = true;
		this.isLoading = false;
		if(this.params.use_spinner) {
			this.el.removeChild(this.spinEl);
			this.spinEl = null;
		}
		if(this.params.use_placeholder) {
			this.el.removeChild(this.thumbEl);
			this.thumbEl = null;
		}
		this.el.appendChild(this.vidEl);
		if(this.flag_delayPlay) {
			this.vidEl.play();
		}
	}
	,play: function() {
		if(this.isLoaded) {
			this.vidEl.play();
		} else {
			this.flag_delayPlay = true;
			if(this.params.jit) {
				this.loadVideo();
			}
		}
	}
	,pause: function() {
		if(this.isLoaded) {
			this.vidEl.pause();
		} else {
			this.flag_delayPlay = false;
		}
	}
	,stop: function() {
	}
};
var djWeb_other_AutoTextGroup = function(source,speed) {
	this.onComplete = null;
	this.elements = [];
	if(source != null) {
		this.add(source,null,speed);
	}
};
djWeb_other_AutoTextGroup.__name__ = true;
djWeb_other_AutoTextGroup.prototype = {
	add: function(source,text,speed) {
		var _gthis = this;
		djWeb_tools_Helper.getElementsMultiAndDo(source,function(el) {
			if(el != null) {
				_gthis.elements.push(new djWeb_other_AutoText(el,text,speed));
			}
		});
	}
	,start: function(delayBetween,onComplete_) {
		if(delayBetween == null) {
			delayBetween = 0;
		}
		var _gthis = this;
		if(onComplete_ != null) {
			this.onComplete = onComplete_;
		}
		if(this.elements.length == 0) {
			if(this.onComplete != null) {
				this.onComplete();
			}
			return;
		}
		if(delayBetween > 0) {
			var t = new haxe_Timer(delayBetween);
			t.run = function() {
				if(_gthis.elements.length == 1) {
					_gthis.elements.shift().start(function() {
						if(_gthis.onComplete != null) {
							_gthis.onComplete();
						}
					});
					t.stop();
					t = null;
				} else {
					_gthis.elements.shift().start();
				}
			};
		} else {
			this.elements.shift().start($bind(this,this._backToBack_onAnimComplete));
		}
	}
	,_backToBack_onAnimComplete: function() {
		if(this.elements.length == 0) {
			if(this.onComplete != null) {
				this.onComplete();
			}
			return;
		} else {
			this.elements.shift().start($bind(this,this._backToBack_onAnimComplete));
		}
	}
};
var djWeb_other_AutoText = function(appliedElement,inText,inSpeed) {
	if(inSpeed == null) {
		inSpeed = 100;
	}
	this.element = appliedElement;
	if(inText == null) {
		this.fullText = this.element.innerText;
	} else if(inText == "") {
		this.fullText = "--NOT SET--";
	} else {
		this.fullText = inText;
	}
	this.element.innerText = "";
	this.currentPos = 0;
	this.maxLetters = this.fullText.length;
	this.speed = inSpeed;
};
djWeb_other_AutoText.__name__ = true;
djWeb_other_AutoText.addAndGo = function(source,onComplete,delay) {
	var g = new djWeb_other_AutoTextGroup(source);
	g.start(delay,onComplete);
	return g;
};
djWeb_other_AutoText.prototype = {
	start: function(onComplete) {
		if(onComplete != null) {
			this.onAnimationComplete = onComplete;
		}
		haxe_Timer.delay($bind(this,this.onTick),this.speed);
	}
	,onTick: function() {
		this.element.innerText = HxOverrides.substr(this.fullText,0,this.currentPos++);
		if(this.speed > 14) {
			this.speed = Math.ceil(this.speed * 0.93);
		}
		if(this.currentPos > this.maxLetters) {
			if(this.onAnimationComplete != null) {
				this.onAnimationComplete();
			}
		} else {
			haxe_Timer.delay($bind(this,this.onTick),this.speed);
		}
	}
};
var djWeb_other_BgTileScroller = function() { };
djWeb_other_BgTileScroller.__name__ = true;
djWeb_other_BgTileScroller.timerUpdate = function() {
	var _g = 0;
	var _g1 = djWeb_other_BgTileScroller.elements;
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		var p = i._bgts;
		p.scrollx += p.scrollxSpeed;
		p.scrolly += p.scrollySpeed;
		p.scrollx %= p.imWidth;
		p.scrolly %= p.imHeight;
		i.style.backgroundPosition = "" + p.scrollx + "px " + p.scrolly + "px";
	}
};
djWeb_other_BgTileScroller.stopTimer = function() {
	if(djWeb_other_BgTileScroller.timer != null) {
		djWeb_other_BgTileScroller.timer.stop();
		djWeb_other_BgTileScroller.timer = null;
	}
};
djWeb_other_BgTileScroller.startTimer = function() {
	djWeb_other_BgTileScroller.stopTimer();
	djWeb_other_BgTileScroller.timer = new haxe_Timer(Math.floor(1000 / djWeb_other_BgTileScroller.FPS));
	djWeb_other_BgTileScroller.timer.run = djWeb_other_BgTileScroller.timerUpdate;
};
djWeb_other_BgTileScroller.setDir = function(el,angle,speed) {
	var p = el._bgts;
	if(angle != null) {
		p.angle = angle;
	}
	if(speed != null) {
		p.speed = speed;
	}
	var rads = p.angle * Math.PI / 180;
	p.scrollxSpeed = Math.cos(rads) * p.speed;
	p.scrollySpeed = -Math.sin(rads) * p.speed;
};
djWeb_other_BgTileScroller.quickSetBG = function(el,image) {
};
djWeb_other_BgTileScroller.linkElement = function(source,imageUrl,angle,speed) {
	if(angle == null) {
		angle = djWeb_other_BgTileScroller.DEFAULT_DIRECTION;
	}
	if(speed == null) {
		speed = djWeb_other_BgTileScroller.DEFAULT_SPEED;
	}
	djWeb_tools_Helper.getElementsMultiAndDo(source,function(el) {
		if(el == null) {
			haxe_Log.trace("Error : Element is NULL!",{ fileName : "djWeb/other/BgTileScroller.hx", lineNumber : 144, className : "djWeb.other.BgTileScroller", methodName : "linkElement"});
			return;
		}
		var o = { imageUrl : imageUrl, speed : speed, angle : angle, scrollx : 0, scrolly : 0, scrollxSpeed : 0, scrollySpeed : 0, imWidth : 0, imHeight : 0};
		el._bgts = o;
		djWeb_other_BgTileScroller.setDir(el);
		djWeb_other_BgTileScroller.elements.push(el);
		var im = new Image();
		im.src = imageUrl;
		o.imWidth = im.width;
		o.imHeight = im.height;
		el.style.backgroundImage = "url(" + im.src + ")";
		el.style.backgroundRepeat = "repeat";
		if(djWeb_other_BgTileScroller.timer == null) {
			djWeb_other_BgTileScroller.startTimer();
		}
	});
	if(djWeb_other_BgTileScroller.timer != null) {
		djWeb_other_BgTileScroller.timerUpdate();
	}
};
djWeb_other_BgTileScroller.removeElement = function(source) {
	djWeb_tools_Helper.getElementsMultiAndDo(source,function(i) {
		try {
			HxOverrides.remove(djWeb_other_BgTileScroller.elements,i);
			i.style.backgroundImage = "";
			i._bgts = null;
		} catch( _g ) {
			return;
		}
	});
	if(djWeb_other_BgTileScroller.elements.length == 0) {
		djWeb_other_BgTileScroller.timer.stop();
		djWeb_other_BgTileScroller.timer = null;
	}
};
djWeb_other_BgTileScroller.removeimageUrl = function(URL_) {
	var _g = [];
	var _g1 = 0;
	var _g2 = djWeb_other_BgTileScroller.elements;
	while(_g1 < _g2.length) {
		var v = _g2[_g1];
		++_g1;
		var tmp;
		if(v._bgts.imageUrl == URL_) {
			v._bgts = null;
			v.style.backgroundImage = "";
			tmp = false;
		} else {
			tmp = true;
		}
		if(tmp) {
			_g.push(v);
		}
	}
	djWeb_other_BgTileScroller.elements = _g;
	if(djWeb_other_BgTileScroller.elements.length == 0) {
		djWeb_other_BgTileScroller.timer.stop();
		djWeb_other_BgTileScroller.timer = null;
	}
};
var djWeb_other_FixedHeader = function(params) {
	params = djWeb_tools_Helper.defParams(params,djWeb_other_FixedHeader.defParams);
	this.maxHeight = params.maxHeight;
	this.minHeight = params.minHeight;
	this.scrollTrigger = params.scrollTrigger;
	this.flag_autoHide = params.autoHide;
	if(this.flag_autoHide) {
		this.isVisible = true;
		this.minHeight = params.height;
		this.maxHeight = params.height;
	} else {
		this.ghostEl = djWeb_W.dom.getBox(null,this.maxHeight);
	}
	if(this.scrollTrigger == 0) {
		this.scrollTrigger = this.maxHeight * 0.8 | 0;
	}
	var _this = djWeb_W.dom;
	this.el = window.document.createElement("div");
	djWeb_W.dom.qStyle(this.el,{ position : "fixed", top : "0px", width : "100%", transition : "all 0.2s ease-in-out", margin : 0, height : "" + this.maxHeight + "px", display : "block", zIndex : 999});
	this.isTall = true;
	this.update();
};
djWeb_other_FixedHeader.__name__ = true;
djWeb_other_FixedHeader.prototype = {
	update: function() {
		if(this.flag_autoHide) {
			if(djWeb_W.main.scroll_top > this.scrollTrigger) {
				this.setVisible(true);
			} else {
				this.setVisible(false);
			}
		} else if(this.isTall && djWeb_W.main.scroll_top > this.scrollTrigger) {
			this.setSize(0);
		} else if(!this.isTall && djWeb_W.main.scroll_top <= this.scrollTrigger) {
			this.setSize(1);
		}
	}
	,setSize: function(size) {
		this.isTall = size == 1;
		if(this.isTall) {
			this.el.style.height = this.maxHeight + "px";
		} else {
			this.el.style.height = this.minHeight + "px";
		}
	}
	,setVisible: function(value) {
		if(this.isVisible == value) {
			return;
		}
		this.isVisible = value;
		if(this.isVisible) {
			this.el.style.top = "0px";
		} else {
			this.el.style.top = "-" + this.maxHeight + "px";
		}
	}
};
var djWeb_tools_BrowserInfos = function() {
	this.checkAll();
};
djWeb_tools_BrowserInfos.__name__ = true;
djWeb_tools_BrowserInfos.prototype = {
	checkAll: function() {
		this.IS_WEBKIT = 'WebkitAppearance' in document.documentElement.style;
		this.IS_MOBILE = this.isMobile();
		this.SUPPORT_XMLREQUEST = typeof XMLHttpRequest != 'undefined';
		haxe_Log.trace("BROWSER.IS_WEBKIT",{ fileName : "djWeb/tools/BrowserInfos.hx", lineNumber : 35, className : "djWeb.tools.BrowserInfos", methodName : "checkAll", customParams : [this.IS_WEBKIT]});
		haxe_Log.trace("BROWSER.IS_MOBILE",{ fileName : "djWeb/tools/BrowserInfos.hx", lineNumber : 36, className : "djWeb.tools.BrowserInfos", methodName : "checkAll", customParams : [this.IS_MOBILE]});
		haxe_Log.trace("BROWSER.SUPPORT_XMLREQUEST",{ fileName : "djWeb/tools/BrowserInfos.hx", lineNumber : 37, className : "djWeb.tools.BrowserInfos", methodName : "checkAll", customParams : [this.SUPPORT_XMLREQUEST]});
	}
	,videoCheck: function() {
		var _this = djWeb_W.dom;
		var vid = window.document.createElement("video");
		this.VIDEO_WEBM = vid.canPlayType("video/webm; codecs=\"vp8, vorbis\"") != "";
		this.VIDEO_MP4 = vid.canPlayType("video/mp4; codecs=\"mp4v.20.8\"") != "";
		haxe_Log.trace("BROWSER.VIDEO_WEBM",{ fileName : "djWeb/tools/BrowserInfos.hx", lineNumber : 51, className : "djWeb.tools.BrowserInfos", methodName : "videoCheck", customParams : [this.VIDEO_WEBM]});
		haxe_Log.trace("BROWSER.VIDEO_MP4",{ fileName : "djWeb/tools/BrowserInfos.hx", lineNumber : 52, className : "djWeb.tools.BrowserInfos", methodName : "videoCheck", customParams : [this.VIDEO_MP4]});
	}
	,isMobile: function() {
		if(!($global.navigator.userAgent.indexOf("Android") >= 0 && $global.navigator.userAgent.indexOf("Mobile") >= 0 || $global.navigator.userAgent.indexOf("webOS") >= 0 || $global.navigator.userAgent.indexOf("iPhone") >= 0 || $global.navigator.userAgent.indexOf("iPod") >= 0 || $global.navigator.userAgent.indexOf("BlackBerry") >= 0)) {
			return $global.navigator.userAgent.indexOf("Windows Phone") >= 0;
		} else {
			return true;
		}
	}
};
var djWeb_tools_DomTools = function() {
};
djWeb_tools_DomTools.__name__ = true;
djWeb_tools_DomTools.prototype = {
	newElement: function(tag) {
		return window.document.createElement(tag);
	}
	,toLink: function(el,url,newTab) {
		if(newTab == null) {
			newTab = false;
		}
		var l = this.newLink(url,newTab,null);
		l.appendChild(el);
		return l;
	}
	,newLink: function(url,newTab,cssStyle) {
		if(newTab == null) {
			newTab = false;
		}
		var a = window.document.createElement("a");
		if(newTab) {
			a.target = "_blank";
		}
		if(cssStyle != null) {
			a.className = cssStyle;
		}
		a.href = url;
		return a;
	}
	,newLinkImage: function(source,url,newTab) {
		if(newTab == null) {
			newTab = true;
		}
		var im = new Image();
		im.src = source;
		return this.toLink(im,url,newTab);
	}
	,qAppend: function(el,list) {
		var _g = 0;
		while(_g < list.length) {
			var i = list[_g];
			++_g;
			el.appendChild(i);
		}
	}
	,qStyle: function(el,styles) {
		var _g = 0;
		var _g1 = Reflect.fields(styles);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			el.style[i] = Reflect.field(styles,i);
		}
	}
	,getBox: function(width,height) {
		var el = window.document.createElement("div");
		el.style.display = "block";
		if(typeof(width) == "number" && ((width | 0) === width)) {
			el.style.width = "" + Std.string(width) + "px";
		} else if(typeof(width) == "string") {
			el.style.width = width;
		}
		if(typeof(height) == "number" && ((height | 0) === height)) {
			el.style.height = "" + Std.string(height) + "px";
		} else if(typeof(height) == "string") {
			el.style.height = height;
		}
		return el;
	}
	,toFlex: function(el,dir,justify,align) {
		if(dir == null) {
			dir = "row";
		}
		el.style.display = "flex";
		el.style.flexDirection = dir;
		el.style.flexWrap = "wrap";
		el.style.justifyContent = (justify == "center" ? "" : "flex-") + justify;
		el.style.alignItems = align;
	}
	,newFlex: function(dir,justify,align) {
		if(dir == null) {
			dir = "row";
		}
		var box = window.document.createElement("div");
		this.toFlex(box,dir,justify,align);
		return box;
	}
	,getFlexItem: function(flexW,align,innerHTML) {
		if(align == null) {
			align = "auto";
		}
		var flex = window.document.createElement("div");
		flex.style.flex = flexW == null ? "null" : "" + flexW;
		flex.style.alignSelf = align;
		flex.innerHTML = innerHTML != null ? innerHTML : "";
		return flex;
	}
	,getLI: function(text,imageURL,topMargin,textPad) {
		if(textPad == null) {
			textPad = 32;
		}
		if(topMargin == null) {
			topMargin = 4;
		}
		var li = window.document.createElement("li");
		li.style.background = "url('" + imageURL + "') no-repeat left 2px";
		li.style.paddingLeft = "" + textPad + "px";
		li.style.marginTop = "" + topMargin + "px";
		li.style.listStyle = "none";
		li.style.fontFamily = "inherit";
		li.innerHTML = text;
		return li;
	}
	,CSS_AddStyle: function(stylename,cssText) {
		var styleElement = window.document.createElement("style");
		styleElement.id = stylename;
		styleElement.innerHTML = cssText;
		window.document.getElementsByTagName("head")[0].appendChild(styleElement);
	}
	,ADD_META: function(name,content) {
		var meta = window.document.createElement("meta");
		meta.name = name;
		meta.content = content;
		window.document.getElementsByTagName("head")[0].appendChild(meta);
	}
};
var djWeb_tools_Helper = $hx_exports["Helper"] = function() { };
djWeb_tools_Helper.__name__ = true;
djWeb_tools_Helper.getElementOrID = function(el) {
	if(typeof(el) == "string") {
		return window.document.getElementById(el);
	} else if(((el) instanceof HTMLElement)) {
		return el;
	} else {
		return null;
	}
};
djWeb_tools_Helper.getElementsMultiAndDo = function(source,funct) {
	var el = null;
	if(((source) instanceof Array) || ((source) instanceof NodeList) || ((source) instanceof HTMLCollection)) {
		el = [];
		var arr = source;
		var _g = 0;
		while(_g < arr.length) {
			var i = arr[_g];
			++_g;
			el.push(djWeb_tools_Helper.getElementOrID(i));
		}
	} else {
		el = [djWeb_tools_Helper.getElementOrID(source)];
	}
	if(funct != null) {
		var _g = 0;
		while(_g < el.length) {
			var i = el[_g];
			++_g;
			funct(i);
		}
	}
	return el;
};
djWeb_tools_Helper.createFullPageBG = function(scrollableHeight) {
	if(scrollableHeight == null) {
		scrollableHeight = false;
	}
	var bg = window.document.createElement("div");
	if(scrollableHeight) {
		bg.style.height = "100%";
		bg.style.overflowX = "hidden";
	} else {
		bg.style.height = "100vh";
		bg.style.overflow = "hidden";
	}
	bg.style.width = "100vw";
	bg.style.display = "block";
	bg.style.position = "absolute";
	bg.style.margin = "0";
	bg.style.zIndex = "0";
	var skipTags = ["SCRIPT","STYLE","META"];
	var i = 0;
	var elems = [];
	while(i < window.document.body.childElementCount) {
		var c = window.document.body.children[i++];
		if(skipTags.indexOf(c.tagName) < 0) {
			elems.push(c);
		}
	}
	while(elems.length > 0) bg.appendChild(elems.shift());
	window.document.body.appendChild(bg);
	return bg;
};
djWeb_tools_Helper.setBackground = function(el,type,par) {
	switch(type) {
	case "animtile":
		break;
	case "color":
		el.style.backgroundColor = par;
		break;
	case "image":
		el.style.backgroundImage = "url(" + par + ")";
		el.style.backgroundRepeat = "no-repeat";
		break;
	case "tile":
		el.style.backgroundImage = "url(" + par + ")";
		el.style.backgroundRepeat = "repeat";
		break;
	}
};
djWeb_tools_Helper.setOverlapping = function(el,front) {
	if(front == null) {
		front = true;
	}
	if(front) {
		el.style.position = "relative";
	} else {
		el.style.position = "absolute";
	}
};
djWeb_tools_Helper.defParams = function(obj,template) {
	if(obj == null) {
		return Reflect.copy(template);
	} else {
		obj = Reflect.copy(obj);
	}
	var _g = 0;
	var _g1 = Reflect.fields(template);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		if(!Object.prototype.hasOwnProperty.call(obj,field)) {
			obj[field] = Reflect.field(template,field);
		}
	}
	return obj;
};
djWeb_tools_Helper.clearAllSelections = function() {
	if(window.getSelection != null) {
		window.getSelection().removeAllRanges();
	}
};
djWeb_tools_Helper.appendTransition = function(el,trans) {
	if(el.style.transition.length == 0) {
		el.style.transition = trans;
	} else {
		el.style.transition += "," + trans;
	}
};
djWeb_tools_Helper.removeTransition = function(el,property) {
	var ll = el.style.transition.split(", ");
	var c = 0;
	while(true) {
		if(ll[c].indexOf(property) > -1) {
			ll.splice(c,1);
			el.style.transition = ll.join(",");
			break;
		}
		if(!(++c < ll.length)) {
			break;
		}
	}
};
djWeb_tools_Helper.getSizeBeforeDom = function(el) {
	var parent = el.parentElement;
	var wasInvisible = el.style.visibility == "hidden";
	if(!wasInvisible) {
		el.style.visibility = "hidden";
	}
	window.document.body.appendChild(el);
	var ar = [el.clientWidth,el.clientHeight];
	if(parent != null) {
		parent.appendChild(el);
	} else {
		window.document.body.removeChild(el);
	}
	if(!wasInvisible) {
		el.style.visibility = "visible";
	}
	return ar;
};
djWeb_tools_Helper.insertHREF = function(string,url,classname) {
	if(classname == null) {
		classname = "link";
	}
	var _this_r = new RegExp("%(.+)%","".split("u").join(""));
	return string.replace(_this_r,"<a href=\"" + url + "\" target=\"_blank\" class=\"" + classname + "\">$1</a>");
};
var djWeb_tools_MathTools = function() {
	this.MAX_INT = Number.MAX_SAFE_INTEGER;
	this.MAX_FLOAT = Number.MAX_VALUE;
	var d = new Date();
	this.randomSeed = d.getMilliseconds() * 2;
	this.randomSeed *= d.getHours();
	this.randomSeed -= this.randomSeed * Math.random() * 0.2;
	haxe_Log.trace("MathTools | MaxInt=" + this.MAX_INT + " | MaxFloat=" + this.MAX_FLOAT + " | SEED = " + this.randomSeed,{ fileName : "djWeb/tools/MathTools.hx", lineNumber : 29, className : "djWeb.tools.MathTools", methodName : "new"});
};
djWeb_tools_MathTools.__name__ = true;
djWeb_tools_MathTools.prototype = {
	rnd_int: function(Min,Max) {
		if(Max == null) {
			Max = -1;
		}
		if(Min == null) {
			Min = 0;
		}
		if(Max == -1) {
			Max = this.MAX_INT;
		}
		if(Min == Max) {
			return Min;
		} else {
			if(Min > Max) {
				Min += Max;
				Max = Min - Max;
				Min -= Max;
			}
			return Math.floor(Min + (Max - Min + 1) * Math.random());
		}
	}
	,rnd_float: function(Min,Max) {
		if(Max == null) {
			Max = 1;
		}
		if(Min == null) {
			Min = 0;
		}
		if(Min == Max) {
			return Min;
		} else {
			if(Min > Max) {
				Min += Max;
				Max = Min - Max;
				Min -= Max;
			}
			return Min + (Max - Min) * Math.random();
		}
	}
	,rnd_array: function(ar) {
		return ar[this.rnd_int(0,ar.length - 1)];
	}
};
var djWeb_tools_TextTools = function() {
	this.textStyles = new haxe_ds_StringMap();
	this.textStyles.h["default"] = { color : "#fff", size : 24, bold : "0"};
};
djWeb_tools_TextTools.__name__ = true;
djWeb_tools_TextTools.prototype = {
	applyStyle: function(el,s) {
		if(s.font != null) {
			el.style.fontFamily = s.font;
		}
		el.style.fontSize = "" + s.size + "px";
		el.style.backgroundColor = s.bgColor;
		el.style.fontWeight = s.bold;
		el.style.textShadow = s.shadow;
		el.style.color = s.color;
		el.style.padding = s.padding;
		el.style.display = s.display;
		el.style.textAlign = s.align;
	}
	,addStyle: function(id,s) {
		this.textStyles.h[id] = s;
	}
	,sText: function(text,styleID) {
		var _this = djWeb_W.dom;
		var e = window.document.createElement("p");
		e.innerHTML = text;
		var s = this.textStyles.h[styleID];
		this.applyStyle(e,s);
		return e;
	}
	,fText: function(text,style) {
		var _this = djWeb_W.dom;
		var e = window.document.createElement("p");
		e.innerHTML = text;
		this.applyStyle(e,style);
		return e;
	}
	,cText: function(text,class_) {
		var _this = djWeb_W.dom;
		var e = window.document.createElement("p");
		e.innerHTML = text;
		e.className = class_;
		return e;
	}
};
var flexItems_Box_$Entry = function(data) {
	this.scrollAware = null;
	this.video = null;
	var _gthis = this;
	var _this = djWeb_W.dom;
	this.el = window.document.createElement("div");
	if(djWeb_W.browser.IS_MOBILE) {
		this.el.style.margin = "6px 0px 0px 0px";
		this.el.style.minHeight = "{$THUMB_HEIGHT}px";
		this.el.style.backgroundColor = "black";
		this.el.style.display = "flex";
		this.el.style.alignItems = "center";
		this.el.style.width = REG.MIN_WIDTH + "px";
		this.el.style.padding = "" + flexItems_Box_$Entry.PADDING + "px " + flexItems_Box_$Entry.PADDING / 2 + "px " + flexItems_Box_$Entry.PADDING / 2 + "px " + flexItems_Box_$Entry.PADDING / 2 + "px";
		this.el.style.flexDirection = "column";
	} else {
		this.el.style.margin = "0px 8px 8px 8px";
		this.el.style.backgroundColor = "black";
		this.el.style.display = "flex";
		this.el.style.flexDirection = "row";
		this.el.style.alignItems = "center";
		this.el.style.minWidth = REG.MIN_WIDTH + "px";
		this.el.style.width = REG.MIN_WIDTH + "px";
		this.el.style.padding = "" + flexItems_Box_$Entry.PADDING + "px " + flexItems_Box_$Entry.PADDING / 2 + "px " + flexItems_Box_$Entry.PADDING / 2 + "px " + flexItems_Box_$Entry.PADDING / 2 + "px";
	}
	var _this = djWeb_W.dom;
	this.DIV_THUMB = window.document.createElement("div");
	this.DIV_THUMB.style.padding = "0 " + flexItems_Box_$Entry.PADDING / 2 + "px 0 " + flexItems_Box_$Entry.PADDING / 2 + "px";
	djWeb_W.dom.toFlex(this.DIV_THUMB,"column");
	var THUMB;
	if(data.video != null) {
		this.video = new djWeb_media_BoxWebm(flexItems_Box_$Entry.PROJECT_MEDIA + data.video,flexItems_Box_$Entry.THUMB_WIDTH,flexItems_Box_$Entry.THUMB_HEIGHT);
		THUMB = this.video.el;
	} else {
		var img = new Image(flexItems_Box_$Entry.THUMB_WIDTH,flexItems_Box_$Entry.THUMB_HEIGHT);
		if(data.thumb == null) {
			data.thumb = "ph.jpg";
		}
		img.src = flexItems_Box_$Entry.PROJECT_MEDIA + data.thumb;
		img.style.objectFit = "cover";
		THUMB = img;
	}
	THUMB.style.border = "1px solid #222";
	THUMB.style.transition = "border 0.2s ease-out";
	var _this = djWeb_W.dom;
	var FOOTER = window.document.createElement("span");
	FOOTER.style.fontSize = flexItems_Box_$Entry.SIZE_FOOTER;
	FOOTER.style.color = flexItems_Box_$Entry.COLOR_FOOTER;
	FOOTER.style.marginTop = "4px";
	FOOTER.innerText = "" + data.year + " , " + data.lang.toUpperCase();
	var _this = djWeb_W.dom;
	this.DIV_INFO = window.document.createElement("div");
	this.DIV_INFO.style.padding = "0 " + flexItems_Box_$Entry.PADDING / 2 + "px 0 " + flexItems_Box_$Entry.PADDING / 2 + "px";
	var _this = djWeb_W.dom;
	var STRIPCON = window.document.createElement("div");
	STRIPCON.style.display = "flex";
	STRIPCON.style.alignItems = "flex-end";
	var _this = djWeb_W.dom;
	var STRIP = window.document.createElement("div");
	STRIP.style.position = "absolute";
	STRIP.style.background = REG.COLOR_ACCENT;
	STRIP.style.transition = "width 0.2s ease-out";
	STRIP.style.width = "0px";
	STRIP.style.height = "";
	var _this = djWeb_W.dom;
	var TITLE = window.document.createElement("h2");
	TITLE.style.flex = "3";
	TITLE.style.padding = "2px";
	TITLE.style.position = "relative";
	TITLE.style.fontWeight = "bold";
	TITLE.style.color = flexItems_Box_$Entry.COLOR_TITLE;
	TITLE.innerText = data.title;
	TITLE.style.transition = "color 0.2s ease-out";
	var _this = djWeb_W.dom;
	var SUBTITLE = window.document.createElement("span");
	SUBTITLE.style.flex = "1";
	SUBTITLE.style.position = "relative";
	SUBTITLE.style.textAlign = "right";
	SUBTITLE.style.fontSize = flexItems_Box_$Entry.SIZE_FOOTER;
	SUBTITLE.style.color = REG.COLOR_ACCENT_2;
	SUBTITLE.innerText = data.type;
	var _this = djWeb_W.dom;
	var DESC = window.document.createElement("p");
	DESC.style.borderTop = "2px solid " + REG.COLOR_ACCENT_2;
	DESC.style.paddingTop = "4px";
	DESC.style.fontSize = flexItems_Box_$Entry.SIZE_TEXT;
	DESC.style.color = flexItems_Box_$Entry.COLOR_TEXT;
	DESC.innerText = data.desc;
	var _this = djWeb_W.dom;
	var el = this.DIV_THUMB;
	var list = [djWeb_W.dom.toLink(THUMB,data.url),FOOTER];
	var _g = 0;
	while(_g < list.length) {
		var i = list[_g];
		++_g;
		el.appendChild(i);
	}
	var _this = djWeb_W.dom;
	var list = [STRIP,TITLE,SUBTITLE];
	var _g = 0;
	while(_g < list.length) {
		var i = list[_g];
		++_g;
		STRIPCON.appendChild(i);
	}
	var _this = djWeb_W.dom;
	var el = this.DIV_INFO;
	var list = [STRIPCON,DESC];
	var _g = 0;
	while(_g < list.length) {
		var i = list[_g];
		++_g;
		el.appendChild(i);
	}
	var _this = djWeb_W.dom;
	var el = this.el;
	var list = [this.DIV_THUMB,this.DIV_INFO];
	var _g = 0;
	while(_g < list.length) {
		var i = list[_g];
		++_g;
		el.appendChild(i);
	}
	THUMB.onmouseover = function(_) {
		THUMB.style.border = "1px solid yellow";
	};
	THUMB.onmouseout = function(_) {
		THUMB.style.border = "1px solid #222";
	};
	if(djWeb_W.browser.IS_WEBKIT) {
		this.el.onmouseover = function(_) {
			if(STRIP.style.height == "") {
				STRIP.style.height = TITLE.offsetHeight + "px";
			}
			STRIP.style.width = TITLE.offsetWidth + "px";
			TITLE.style.color = "black";
		};
		this.el.onmouseout = function(_) {
			STRIP.style.width = "0px";
			TITLE.style.color = flexItems_Box_$Entry.COLOR_TITLE;
		};
	}
	if(this.video != null) {
		this.scrollAware = new djWeb_ScrollAware(this.el);
		this.scrollAware.trigger_offset = 32;
		this.scrollAware.callback_ON = function() {
			_gthis.video.play();
		};
		this.scrollAware.callback_OFF = function() {
			_gthis.video.pause();
		};
	}
};
flexItems_Box_$Entry.__name__ = true;
flexItems_Box_$Entry.prototype = {
	thumbLeft: function() {
		this.el.style.flexDirection = "row";
	}
	,thumbRight: function() {
		this.el.style.flexDirection = "row-reverse";
	}
};
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
haxe_ds_StringMap.__name__ = true;
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var sections_Section_$Footer = function() {
	this.FONT = null;
	this.COLOR_2 = "#666";
	this.COLOR_1 = "#444";
	sections_Section_$Footer.initStyle();
	djWeb_Section.call(this,{ marginTop : "16px", paddingBottom : "4px", paddingTop : "4px"});
	this.createBGStrip("black");
	this.bg.style.borderBottom = "1px solid #333";
	var str = [];
	str[0] = "Made with " + this.getEmLink("HAXE","http://haxe.org") + ", John32b 2016-2021";
	var _g = 0;
	while(_g < str.length) {
		var s = str[_g];
		++_g;
		this.add(djWeb_W.text.fText(s,{ size : 8, color : this.COLOR_1, align : "center", font : this.FONT, bold : "400"}));
	}
};
sections_Section_$Footer.__name__ = true;
sections_Section_$Footer.initStyle = function() {
	if(sections_Section_$Footer._stylesAdded) {
		return;
	}
	sections_Section_$Footer._stylesAdded = true;
	var LINK_COLOR = "#707070";
	var LINK_COLOR_H = "#C0C0C0";
	var css = ".flink { color:" + LINK_COLOR + "; } .flink:hover {color:" + LINK_COLOR_H + ";}";
	djWeb_W.dom.CSS_AddStyle("flink",css);
};
sections_Section_$Footer.__super__ = djWeb_Section;
sections_Section_$Footer.prototype = $extend(djWeb_Section.prototype,{
	getEmLink: function(text,url) {
		return "<a href=\"" + url + "\" class=\"flink\">" + text + "</a>";
	}
});
var sections_Section_$Header = function(text,subtitle,maxW) {
	if(maxW == null) {
		maxW = -1;
	}
	if(subtitle == null) {
		subtitle = "";
	}
	this.COLOR_L = "#555";
	this.COLOR_H = "#AAA";
	djWeb_Section.call(this,{ marginTop : "8px", marginBottom : "8px"});
	this.setResizeBehavior("rubber",[REG.MIN_WIDTH,maxW > 0 ? maxW : REG.DEF_WIDTH]);
	djWeb_W.dom.toFlex(this.el,"row","start","center");
	var _this = djWeb_W.dom;
	var TITLE = window.document.createElement("h3");
	TITLE.style.display = "inline";
	TITLE.style.padding = "4px";
	TITLE.style.backgroundColor = this.COLOR_L;
	TITLE.style.color = this.COLOR_H;
	TITLE.innerText = text;
	var _this = djWeb_W.dom;
	var SUBT = window.document.createElement("p");
	SUBT.style.display = "inline";
	SUBT.style.color = this.COLOR_L;
	SUBT.style.paddingLeft = "8px";
	SUBT.style.fontSize = "8px";
	SUBT.innerText = subtitle;
	if(djWeb_W.browser.IS_MOBILE) {
		SUBT.style.fontSize = "12px";
		SUBT.style.paddingLeft = "8px";
	}
	var _this = djWeb_W.dom;
	var el = this.el;
	var list = [TITLE,SUBT];
	var _g = 0;
	while(_g < list.length) {
		var i = list[_g];
		++_g;
		el.appendChild(i);
	}
};
sections_Section_$Header.__name__ = true;
sections_Section_$Header.__super__ = djWeb_Section;
sections_Section_$Header.prototype = $extend(djWeb_Section.prototype,{
});
var sections_Section_$Incompatible = function() {
	this.IMG_HEIGHT = 26;
	this.IMG_WIDTH = 26;
	this.TEXT_SIZE = "16px";
	this.TEXT_COLOR = "#DDD";
	this.BG_COLOR_YELLOW = "#FAA505";
	this.BG_COLOR_RED = "#E1390F";
	var _gthis = this;
	djWeb_Section.call(this);
	this.el.style.display = "flex";
	this.el.style.alignItems = "center";
	this.el.style.padding = "16px";
	var img = new Image(this.IMG_WIDTH,this.IMG_HEIGHT);
	img.src = REG.PATH_MEDIA + REG.ICON_WARN;
	this.add(img);
	var _this = djWeb_W.dom;
	var p = window.document.createElement("p");
	p.style.fontSize = this.TEXT_SIZE;
	p.style.color = this.TEXT_COLOR;
	p.style.marginLeft = "12px";
	this.add(p);
	if(!djWeb_W.browser.VIDEO_WEBM) {
		p.innerHTML = "Browser doesn't support WEBM videos.<br/>Please use FIREFOX for the full experience";
		p.style.color = this.BG_COLOR_YELLOW;
	}
	var close = djWeb_W.text.cText("X","link");
	close.style.padding = "2px 2px 2px 32px";
	close.style.cursor = "pointer";
	close.onclick = function(_) {
		_gthis.el.parentNode.removeChild(_gthis.el);
	};
	this.add(close);
};
sections_Section_$Incompatible.__name__ = true;
sections_Section_$Incompatible.__super__ = djWeb_Section;
sections_Section_$Incompatible.prototype = $extend(djWeb_Section.prototype,{
});
var sections_Section_$Other = function() {
	this.FONT = "monospace";
	this.IMG_HEIGHT = 26;
	this.IMG_WIDTH = 26;
	this.COLOR1 = "#CCC";
	this.COLOR = "#BBB";
	djWeb_Section.call(this,{ padding : "8px 10px 8px 10px", backgroundColor : "#222"});
	djWeb_W.text.addStyle("text",{ font : this.FONT, size : 12, bold : "500", color : this.COLOR});
	djWeb_W.text.addStyle("textH",{ font : this.FONT, size : 14, bold : "300", color : this.COLOR1, padding : "2px 32px 10px 32px"});
	this.setResizeBehavior("rubber",[REG.MIN_WIDTH,REG.DEF_WIDTH]);
	this.add(djWeb_W.text.sText("A simple page showcasing some of the projects I have worked on. The entire page was build with javascript code, compiled with HAXE.","textH"));
	this.add(this.toLink(REG.ICON_TUMBLR,"Visit my %Tumblr% page to see some of my graphics related work",REG.LINK_TUMBLR));
	this.add(this.toLink(REG.ICON_GITHUB,"Checkout the repository with source of this page at %Github%",REG.LINK_GITHUB));
	this.add(this.toLink(REG.ICON_TWITTER,"Follow me on Twitter %" + ("@" + REG.LINK_TWITTER_HANDLE + "%"),REG.LINK_TWITTER));
	this.add(this.toLink(REG.ICON_EMAIL,"Send me an e-mail %" + ("" + REG.LINK_EMAIL + "%"),"mailto:" + REG.LINK_EMAIL));
};
sections_Section_$Other.__name__ = true;
sections_Section_$Other.__super__ = djWeb_Section;
sections_Section_$Other.prototype = $extend(djWeb_Section.prototype,{
	toLink: function(imgSrc,txt,url) {
		var _this_r = new RegExp("%(.+)%","".split("u").join(""));
		txt = txt.replace(_this_r,"<a href=\"" + url + "\">$1</a>");
		var div = djWeb_W.dom.newFlex("row","center","flex-end");
		div.style.marginLeft = "32px";
		var img = new Image(this.IMG_WIDTH,this.IMG_HEIGHT);
		img.src = REG.PATH_MEDIA + imgSrc;
		img.style.marginBottom = "-6px";
		var p = djWeb_W.text.sText(txt,"text");
		p.style.flex = "1";
		p.style.padding = "0px 0px 0px 4px";
		var _this = djWeb_W.dom;
		var list = [djWeb_W.dom.toLink(img,url),p];
		var _g = 0;
		while(_g < list.length) {
			var i = list[_g];
			++_g;
			div.appendChild(i);
		}
		return div;
	}
});
var sections_Section_$Projects = function() {
	this.name = "Project Section";
	djWeb_Section.call(this,{ padding : "0"});
	this.setResizeBehavior("steps",[REG.MIN_WIDTH,1250]);
	this.entries = djWeb_W.loader.bank.h["entries"].entries;
	djWeb_W.dom.toFlex(this.el,"row","center");
};
sections_Section_$Projects.__name__ = true;
sections_Section_$Projects.__super__ = djWeb_Section;
sections_Section_$Projects.prototype = $extend(djWeb_Section.prototype,{
	onAddedToPage: function() {
		this.boxes = [];
		var _g = 0;
		var _g1 = this.entries;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var b = new flexItems_Box_$Entry(i);
			this.boxes.push(b);
			this.add(b);
			this.page.trackScroll(b.scrollAware);
		}
	}
	,onStepResize: function(step) {
		if(djWeb_W.browser.IS_MOBILE) {
			return;
		}
		if(step == 0) {
			this.narrow();
		} else {
			this.wide();
		}
	}
	,narrow: function() {
		var counter = 0;
		var _g = 0;
		var _g1 = this.boxes;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(counter++ % 2 == 0) {
				b.thumbLeft();
			} else {
				b.thumbRight();
			}
		}
	}
	,wide: function() {
		var _g = 0;
		var _g1 = this.boxes;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.thumbLeft();
		}
	}
});
var sections_Section_$Title = function() {
	this.name = "Title Section";
	djWeb_Section.call(this,{ height : "240px", padding : "8px"});
	this.setResizeBehavior("rubber",[REG.MIN_WIDTH,REG.DEF_WIDTH]);
	this.createBGStrip();
	djWeb_other_BgTileScroller.linkElement(this.bg,REG.PATH_MEDIA + REG.TILED_BACKGROUNDS[Std.random(REG.TILED_BACKGROUNDS.length)]);
	djWeb_W.dom.toFlex(this.el,"column");
	var _this = djWeb_W.dom;
	var TOP = window.document.createElement("div");
	TOP.style.flex = "1";
	var _this = djWeb_W.dom;
	var BOTTOM = window.document.createElement("div");
	BOTTOM.style.display = "flex";
	BOTTOM.style.justifyContent = "flex-end";
	var _this = djWeb_W.dom;
	var title = window.document.createElement("h1");
	title.style.color = REG.COLOR_ACCENT;
	title.innerText = REG.HEADER_TITLE;
	var _this = djWeb_W.dom;
	var subTitle = window.document.createElement("h3");
	subTitle.style.color = "#DDD";
	subTitle.innerText = REG.HEADER_SUBTITLE;
	var _this = djWeb_W.dom;
	var list = [title,subTitle];
	var _g = 0;
	while(_g < list.length) {
		var i = list[_g];
		++_g;
		TOP.appendChild(i);
	}
	var _this = djWeb_W.dom;
	var el = this.el;
	var list = [TOP,BOTTOM];
	var _g = 0;
	while(_g < list.length) {
		var i = list[_g];
		++_g;
		el.appendChild(i);
	}
	BOTTOM.appendChild(this.getLink(REG.ICON_TWITTER,"Twitter",REG.LINK_TWITTER));
	BOTTOM.appendChild(this.getLink(REG.ICON_TUMBLR,"Tumblr",REG.LINK_TUMBLR));
	if(REG.LINK_BLOG != null) {
		BOTTOM.appendChild(this.getLink(REG.ICON_BLOG,"Blog",REG.LINK_BLOG));
	}
	var at = new djWeb_other_AutoTextGroup([title,subTitle],100);
	at.start();
};
sections_Section_$Title.__name__ = true;
sections_Section_$Title.__super__ = djWeb_Section;
sections_Section_$Title.prototype = $extend(djWeb_Section.prototype,{
	getLink: function(imageSource,text,url) {
		var _this = djWeb_W.dom;
		var container = window.document.createElement("div");
		container.style.display = "flex";
		container.style.alignItems = "flex-end";
		container.style.marginRight = "8px";
		var im = new Image(sections_Section_$Title.ICON_WIDTH,sections_Section_$Title.ICON_HEIGHT);
		im.src = REG.PATH_MEDIA + imageSource;
		im.style.objectFit = "cover";
		var _this = djWeb_W.dom;
		var txt = window.document.createElement("a");
		txt.onmouseover = function(e) {
			txt.style.color = REG.COLOR_ACCENT;
			im.style.paddingBottom = "4px";
		};
		txt.onmouseleave = function(e) {
			txt.style.color = "white";
			im.style.paddingBottom = "0";
		};
		txt.href = url;
		txt.innerText = text;
		txt.style.fontSize = "12px";
		txt.style.color = "white";
		txt.style.paddingBottom = "8px";
		var _this = djWeb_W.dom;
		var list = [djWeb_W.dom.toLink(im,url,false),txt];
		var _g = 0;
		while(_g < list.length) {
			var i = list[_g];
			++_g;
			container.appendChild(i);
		}
		return container;
	}
});
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
djWeb_MainFrame.defaultParams = { scrollable : false, scrollEvents : false, scrollCheckFreq : 150, pageTitle : "djWeb framework", staticBG : false};
REG.MIN_WIDTH = 600;
REG.MAX_WIDTH = 1300;
REG.DEF_WIDTH = 800;
REG.PATH_MEDIA = "media/";
REG.SITE_TITLE = "John32b Works";
REG.HEADER_TITLE = "John32b";
REG.HEADER_SUBTITLE = "programming, graphics, tools, games";
REG.TILED_BACKGROUNDS = ["bg1.png","bg2.png","bg3.png"];
REG.ICON_BLOG = "ic_blog.png";
REG.ICON_TWITTER = "ic_twitter.png";
REG.ICON_TUMBLR = "ic_tumblr.png";
REG.ICON_GITHUB = "ic_github.png";
REG.ICON_EMAIL = "ic_email.png";
REG.ICON_WARN = "ic_warning.png";
REG.LINK_TWITTER_HANDLE = "john32b";
REG.LINK_TWITTER = "https://www.twitter.com/" + REG.LINK_TWITTER_HANDLE;
REG.LINK_TUMBLR = "https://john32b.tumblr.com";
REG.LINK_GITHUB = "https://github.com/john32b/john32b.github.io";
REG.LINK_EMAIL = "john32b@outlook.com";
REG.COLOR_ACCENT = "yellow";
REG.COLOR_ACCENT_2 = "#DDC564";
REG.COLOR_LINK = "#EFE305";
REG.COLOR_LINK_HOVER = "orange";
REG.COLOR_MOB_THEME = "#2D2D2D";
REG.VERSION = "0.9.5";
djWeb_Section.defStyle = { width : "800px", height : "auto", minHeight : null, marginBottom : "0", marginTop : "0", padding : "4px", backgroundColor : null};
djWeb_Section.RESIZE_RUBBER = 1;
djWeb_Section.RESIZE_STEPS = 2;
djWeb_Section.RESIZE_FIXED = 3;
djWeb_media_BoxWebm.DEFAULTS = { jit : true, use_spinner : true, use_placeholder : true, spinner : ""};
djWeb_other_AutoText.minSpeed = 14;
djWeb_other_AutoText.friction = 0.93;
djWeb_other_BgTileScroller.FPS = 30;
djWeb_other_BgTileScroller.DEFAULT_DIRECTION = 45;
djWeb_other_BgTileScroller.DEFAULT_SPEED = 0.5;
djWeb_other_BgTileScroller.elements = [];
djWeb_other_FixedHeader.defParams = { maxHeight : 64, minHeight : 32, height : 32, scrollTrigger : 0, autoHide : false};
flexItems_Box_$Entry.SIZE_FOOTER = "8px";
flexItems_Box_$Entry.SIZE_TEXT = "14px";
flexItems_Box_$Entry.COLOR_TITLE = "white";
flexItems_Box_$Entry.COLOR_TEXT = "#555";
flexItems_Box_$Entry.COLOR_FOOTER = "#444";
flexItems_Box_$Entry.PADDING = 12;
flexItems_Box_$Entry.PROJECT_MEDIA = REG.PATH_MEDIA + "projects/";
flexItems_Box_$Entry.THUMB_WIDTH = 202;
flexItems_Box_$Entry.THUMB_HEIGHT = flexItems_Box_$Entry.THUMB_WIDTH / 1.3333333333333333 | 0;
sections_Section_$Footer._stylesAdded = false;
sections_Section_$Title.ICON_WIDTH = 42;
sections_Section_$Title.ICON_HEIGHT = 42;
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
